import Header from "@/components/Header";
import Image from 'next/image'
import Head from "next/head";
import React from "react";
import CardNews from "@/components/CardNews";
import Link from "next/link";
import { gql, useQuery } from "@apollo/client"
import Loading from "@/components/Loading";
import Empty from "@/components/Empty";
import { ptBR } from 'date-fns/locale/pt-BR'
import { format, } from "date-fns";
import { GetServerSideProps } from "next";
import { client } from "@/lib/apollo";

const GET_ALL_POSTS = gql`
query GetAllPosts {
posts(orderBy: createdAt_DESC) {
  id
  slug
  subtitle
  title
  createdAt
  coverImage {
    url
  }
  author {
    name
  }
}
}
`
//Tipagem dos dados
interface AllPosts {
  posts: {
    id: string;
    slug: string;
    subtitle: string;
    title: string;
    createdAt: string;
    coverImage: {
      url: string;
    }
    author: {
      name: string;
    }
  }[]
}
export default function Home({ posts }: AllPosts) {




  // const { loading, data, error } = useQuery<AllPosts>(GET_ALL_POSTS)

  //Teste do Empty
  //const data = undefined;
  // console.log(posts)

  // if (loading) return <Loading />

  return (
    <>
      <Head>
        <title>LucasGonzagaTech Blog</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <div className="w-full max-w-[1120px] flex flex-col mx-auto pb-12 px-4">

        <Header />

        {posts ?
          <>
            <Link
              href={`/article/${posts[0].slug}`}
              className="w-full h-full flex gap-4 lg:gap-8 flex-col sm:flex-row items-center justify-center mt-12 hover:brightness-75 transition-all">
              <div className="flex w-full h-full flex-1 min-h-[240px] md:min-h-[350px] relative rounded-2xl overflow-hidden">
                <Image
                  src={posts[0].coverImage.url}
                  alt='Imagem 1'
                  fill={true}
                  style={{ objectFit: "cover" }}
                />
              </div>

              <div className="flex flex-1 h-full flex-col gap-3 lg:gap-6">
                <h1 className="font-bold text-3xl md:text-[40px] text-blue">{posts[0].title}</h1>
                <p className="text-white text-sm md:text-base text-justify lg:text-left">{posts[0].subtitle}</p>

                <div>
                  <p className=" font-bold text-white text-sm md:text-base">{posts[0].author.name}</p>
                  <p className="text-gray text-xs md:text-sm">{format(new Date(posts[0].createdAt), "dd/MM/yyyy", { locale: ptBR })}</p>
                </div>
              </div>

            </Link>

            <div className="flex items-center flex-col sm:grid grid-cols-2 md:grid-cols-3 gap-4 lg:gap-8 mt-12">
              {posts.map((post, index) => {
                if (index != 0) {
                  return (
                    <CardNews
                      key={post.id}
                      title={post.title}
                      subtitle={post.subtitle}
                      author={post.author.name}
                      createdAt={post.createdAt}
                      urlImage={post.coverImage.url}
                      slug={post.slug}
                    />
                  )
                }
              })}
            </div>
          </>
          :
          <Empty />
        }

      </div>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  const { data } = await client.query({ query: GET_ALL_POSTS })
  return {
    props: {
      posts: data.posts,
    }
  }
}